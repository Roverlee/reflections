When would you want to use a remote repository rather than keeping all your work
local?

good way to have a backup of work
facilitates work by more than one person and or work on more than one computer


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

  hmm. the remote can be used for shared work. so I might want to make sure my
  work is ready to be shared and used within a larger body of work.
  I might also want to pull only some changes from this shared body of work that
  Im interested in working on. so helps to keep things orderly.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    forks copy another repository on github onto my repository on github.
    clones refer to copies made from github to a local repository that don't show the direct link to their origin, ie they
    don't give credit to the original owner
    clones can also be pushed back into github and then cloned by others from there.
    branches are elements of a repository, which always have a master branch
    and my have additional branches.
    branches may or may not be committed so also may become dead wood that isnt
    part of the master or otherwise acessible.

What is the benefit of having a copy of the last known state of the remote
stored locally?

  They mentioned the idea you can then download the latest version of the remote
  without changing your local master, so you can compare the two versions
  at your leisure and then merge them when you have examined them and resolved
  any conflicts, if you want to.
  having both the remote and the master have the last known shared copy
  also ensures either can see the difference with whatever new is being
  pushed or pulled, so it can provide the coder with the differences between
  them clearly, which is helpful if you are syncing often.
  but, if you aren't syncing often, wouldnt it be inconvenient to go through
  all those conflicts between the origin/master local and the remote, say?
  

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
